#!/bin/sh
#
#  Copyright 2019 DefKorns (https://gitlab.com/advokaten/remap-canoekachikachi/LICENSE)
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
source /etc/preinit
script_init
#
modtitle="inputs"
omTitle="Gamepad Remapping"

# Options Menu
optionsMenu="$mountpoint/etc/options_menu"
omMod="$optionsMenu/$modtitle"
omModCommands="$omMod/commands"
omModScripts="$omMod/scripts"
omModAssets="$omMod/assets"
gp_script="$omModScripts/gamepadremapper"
p_file="$mountpoint/etc/preinit.d/p8000_gamepadremapper"

template="180000004e696e74656e646f20436c00,Nintendo Clovercon,leftx:LX,lefty:LY,rightx:RX,righty:RY,dpup:UP,dpdown:DOWN,dpleft:LEFT,dpright:RIGHT,a:CIRCLE,b:EXE,y:SQUARE,x:TRIANGLE,back:SELECT,start:START,guide:HOME,leftshoulder:L1,leftshoulder:L3,rightshoulder:R1,rightshoulder:R3,lefttrigger:L2,righttrigger:R2,platform:Linux,"
ctrl_p1="/dev/input/by-path/platform-twi.1-event-joystick"
default_db="$omModScripts/om_defaultDb.txt"
sdl2Scripts="$omModAssets/sdl2"
ctrl_db="$sdl2Scripts/gamecontrollerdb.txt"

# FUNCTIONS
rename() {
    [ -f "$1" ] && mv "$1" "$2"
}

remove() {
    [ -f "$1" ] && rm -rf "$1"
}

copier() {
    [ -f "$1" ] && cp -r "$1" "$2"
}

toggleMenu() {
    while [ ! -e "$ctrl_p1" ]; do usleep 100; done
}

uninstall() {
    [ -d "$sdl2Scripts" ] && rm -fr "$sdl2Scripts"
    remove "$p_file"
}

createDb() {
    [ ! -d "$sdl2Scripts" ] && mkdir -p "$sdl2Scripts"
    sed "176c$template" "$default_db" >"$ctrl_db"
}

playerInput() {
    # input=$(cat "$ctrl_p1" | hexdump -v -e '1/1 "%02x"' -n 32)
    input=$(hexdump -v -e '1/1 "%02x"' -n 32 <"$ctrl_p1")
    buttonInput
}

buttonInput() {
    case "${input:20:4}" in
    3001) btn="b1" ;;
    3101) btn="b0" ;;
    3301) btn="b2" ;;
    3401) btn="b3" ;;
    c202) btn="b13" ;;
    c302) btn="b14" ;;
    c002) btn="b11" ;;
    c102) btn="b12" ;;
    0200) btn="b4" ;;
    3601) btn="a2" ;;
    3801) btn="b7" ;;
    0500) btn="b5" ;;
    3701) btn="a5" ;;
    3901) btn="b7" ;;
    3a01) btn="b9" ;;
    3b01) btn="b9" ;;
    3c01) btn="b10" ;;
    0000) btn="a0" ;;
    0100) btn="a1" ;;
    0300) btn="a3" ;;
    0400) btn="a4" ;;
    esac
    usleep 100000
}

generateScript() {
    remove "$p_file"
    copier "$gp_script" "$p_file"
    $optionsMenu/options --commandPath $omModCommands/ --scriptPath $omModScripts --title "$omTitle" &
}

remapping() {
    toggleMenu
    decodepng "$omModAssets/up.png" >/dev/fb0
    playerInput
    sed -r -i "s/UP/${btn}/g;" "$ctrl_db"
    decodepng "$omModAssets/down.png" >/dev/fb0
    playerInput
    sed -r -i "s/DOWN/${btn}/g;" "$ctrl_db"
    decodepng "$omModAssets/left.png" >/dev/fb0
    playerInput
    sed -r -i "s/LEFT/${btn}/g;" "$ctrl_db"
    decodepng "$omModAssets/right.png" >/dev/fb0
    playerInput
    sed -r -i "s/RIGHT/${btn}/g;" "$ctrl_db"
    decodepng "$omModAssets/a.png" >/dev/fb0
    playerInput
    ok="$btn"
    sed -r -i "s/CIRCLE/${btn}/g;" "$ctrl_db"
    decodepng "$omModAssets/b.png" >/dev/fb0
    playerInput
    sed -r -i "s/EXE/${btn}/g;" "$ctrl_db"
    decodepng "$omModAssets/x.png" >/dev/fb0
    playerInput
    sed -r -i "s/TRIANGLE/${btn}/g;" "$ctrl_db"
    decodepng "$omModAssets/y.png" >/dev/fb0
    playerInput
    sed -r -i "s/SQUARE/${btn}/g;" "$ctrl_db"
    decodepng "$omModAssets/select.png" >/dev/fb0
    playerInput
    sed -r -i "s/SELECT/${btn}/g;" "$ctrl_db"
    decodepng "$omModAssets/start.png" >/dev/fb0
    playerInput
    sed -r -i "s/START/${btn}/g;" "$ctrl_db"
    decodepng "$omModAssets/l1.png" >/dev/fb0
    playerInput
    if [ "$btn" == "3601" ]; then
        sed -r -i "s/L1/${btn}/g;" "$ctrl_db"
        sed -r -i "s/L3/b4/g;" "$ctrl_db"
    else
        sed -r -i "s/L1/${btn}/g;" "$ctrl_db"
        sed -r -i "s/L3/a2/g;" "$ctrl_db"
    fi
    decodepng "$omModAssets/r1.png" >/dev/fb0
    playerInput
    if [ "$btn" == "3701" ]; then
        sed -r -i "s/R1/${btn}/g;" "$ctrl_db"
        sed -r -i "s/R3/b5/g;" "$ctrl_db"
    else
        sed -r -i "s/R1/${btn}/g;" "$ctrl_db"
        sed -r -i "s/R3/a5/g;" "$ctrl_db"
    fi

    decodepng "$omModAssets/continue.png" >/dev/fb0
    playerInput
    if [ "$btn" == "$ok" ]; then
        decodepng "$omModAssets/l2.png" >/dev/fb0
        playerInput
        sed -r -i "s/L2/${btn}/g;" "$ctrl_db"
        decodepng "$omModAssets/r2.png" >/dev/fb0
        playerInput
        sed -r -i "s/R2/${btn}/g;" "$ctrl_db"
        decodepng "$omModAssets/home.png" >/dev/fb0
        playerInput
        sed -r -i "s/HOME/${btn}/g;" "$ctrl_db"
        decodepng "$omModAssets/ly.png" >/dev/fb0
        playerInput
        sed -r -i "s/LY/${btn}/g;" "$ctrl_db"
        decodepng "$omModAssets/lx.png" >/dev/fb0
        playerInput
        sed -r -i "s/LX/${btn}/g;" "$ctrl_db"
        decodepng "$omModAssets/ry.png" >/dev/fb0
        playerInput
        sed -r -i "s/RY/${btn}/g;" "$ctrl_db"
        decodepng "$omModAssets/rx.png" >/dev/fb0
        playerInput
        sed -r -i "s/RX/${btn}/g;" "$ctrl_db"
        decodepng "$omModAssets/final-full.png" >/dev/fb0
    else
        sed -r -i 's/LX/a0/g;' "$ctrl_db"
        sed -r -i 's/LY/a1/g;' "$ctrl_db"
        sed -r -i 's/RX/a3/g;' "$ctrl_db"
        sed -r -i 's/RY/a4/g;' "$ctrl_db"
        sed -r -i 's/HOME/b10/g;' "$ctrl_db"
        sed -r -i 's/L2/b6/g;' "$ctrl_db"
        sed -r -i 's/R2/b7/g;' "$ctrl_db"
        decodepng "$omModAssets/final.png" >/dev/fb0
    fi
    playerInput
    generateScript
}
